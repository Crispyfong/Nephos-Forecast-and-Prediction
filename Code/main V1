import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objects as go
from plotly.subplots import make_subplots
from statsmodels.tsa.arima.model import ARIMA

# Load the data from CSV
data = pd.read_csv('orders.csv')

# Calculate the best selling items
best_selling_items = data.groupby('Items')['Quantity'].sum().reset_index()
best_selling_items = best_selling_items.sort_values('Quantity', ascending=False).head(5)

# Calculate the best selling locations
best_selling_locations = data.groupby('Shipping city')['Quantity'].sum().reset_index()
best_selling_locations = best_selling_locations.sort_values('Quantity', ascending=False).head(5)

# Convert the date column to datetime
data['Date'] = pd.to_datetime(data['Date'])

# Convert the 'TotalPrice' column to numeric type
data['Total price'] = data['Total price'].str.replace('$', '').astype(float)

# Calculate the monthly sales
monthly_sales = data.resample('M', on='Date')['Total price'].sum()

# Perform forecasting for 3 years using ARIMA model
sales_values = monthly_sales.values.astype(float)
model = ARIMA(sales_values, order=(1, 1, 1))
model_fit = model.fit()
forecast = model_fit.forecast(steps=36)

# Create subplots for the dashboard
fig = make_subplots(rows=4, cols=1, subplot_titles=['Best Selling Items', 'Best Selling Locations', 'Monthly Sales Trend', 'Sales Forecast'])

# Add the best selling items chart
fig.add_trace(go.Bar(x=best_selling_items['Items'], y=best_selling_items['Quantity']), row=1, col=1)

# Add the best selling locations chart
fig.add_trace(go.Bar(x=best_selling_locations['Shipping city'], y=best_selling_locations['Quantity']), row=2, col=1)

# Add the monthly sales trend chart
fig.add_trace(go.Scatter(x=monthly_sales.index, y=monthly_sales.values, mode='lines'), row=3, col=1)

# Add the sales forecast chart
forecast_dates = pd.date_range(start=monthly_sales.index[-1], periods=37, freq='M')[1:]
fig.add_trace(go.Scatter(x=forecast_dates, y=forecast, mode='lines'), row=4, col=1)

# Update layout
fig.update_layout(height=800, title='Sales Dashboard')

# Show the dashboard
fig.show()
